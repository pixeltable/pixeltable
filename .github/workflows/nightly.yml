name: nightly

on:
  schedule:
    - cron: "19 2 * * 1,3,5"  # Monday, Wednesday, Friday at 02:19 UTC
  workflow_dispatch:

env:
  # in a PR, the secrets will be empty
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
  MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
  OPENCV_VIDEOIO_DEBUG: 1

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        # Test with a variety of different packages on ubuntu, with the minimum and maximum supported Python versions.
        # We DO include 'expensive' tests in the nightly workflow, but they will only run twice per test (in the
        # min version + max version tests with the configuration that references them).
        os: [ubuntu-22.04]
        python-version: ["3.9", "3.12"]
        package-configs:
          - ""
          - "torch torchvision transformers sentence-transformers pyarrow"
          - "openai together fireworks-ai anthropic mistralai"
          - "datasets boto3 openpyxl tiktoken pymupdf mistune 'spacy<3.8'"  # spacy 3.8 is problematic on python 3.12
          - "label_studio_sdk"
        include:
          # Test the basic pixeltable installation on other platforms.
          - os: macos-12
            python-version: "3.9"
            package-configs: ""
          - os: macos-latest
            python-version: "3.9"
            package-configs: ""
          - os: windows-2022
            python-version: "3.9"
            package-configs: ""
          - os: ubuntu-arm64
            python-version: "3.9"
            package-configs: ""
          - os: ubuntu-x64-t4
            python-version: "3.9"
            package-configs: ""

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}  # Needed for conda to work
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Delete unnecessary files
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/hostedtoolcache
          df -h
      - name: Create user runtime dir
        if: ${{ matrix.os == 'ubuntu-arm64' || matrix.os == 'ubuntu-x64-t4' }}
        # pgserver needs this dir, and it doesn't seem to exist on ubuntu-arm64 or t4 instances for some reason.
        run: |
          sudo mkdir -p /run/user/1001
          sudo chmod a+rwx /run/user/1001
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          activate-environment: pxt
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true  # Needed to use conda with cache action
      - name: Show conda info
        run: conda info
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pixeltable ${{ matrix.package-configs }}
          python -m pip install pytest
      - name: Run the unit tests
        run: |
          pytest -v -m '' tests
      - name: Print utilization info
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          df -h
          du -h -d3 /home/runner
          du -h -d3 /home/runner/.cache
      - name: Print utilization info
        if: ${{ !startsWith(matrix.os, 'ubuntu') }}
        run: df -h

  isolated-nb-tests:
    # Runs a script that tests each notebook in a fresh conda environment with a clean Pixeltable DB,
    # to ensure the notebook is capturing dependencies correctly and that the dependencies still work.
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -el {0}  # Needed for conda to work
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: release
      - name: Delete unnecessary files
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /opt/hostedtoolcache
          df -h
      - name: Install conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          python-version: 3.9
          use-only-tar-bz2: true  # Needed to use conda with cache action
      - name: Run isolated notebook tests
        run: ./scripts/run-isolated-nb-tests.sh
