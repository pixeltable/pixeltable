{
  "@context": "https://pixeltable.com/learn",
  "@type": "Tutorial",
  "@id": "021-mistralai-integration",
  "github_url": "https://github.com/pixeltable/pixeltable/blob/release/docs/notebooks/integrations/working-with-mistralai.ipynb",
  "title": "Working with Mistral AI in Pixeltable",
  "objective": "Learn to integrate Mistral AI's advanced language models for high-quality chat completions with European data compliance",
  "difficulty": "beginner",
  "categories": ["mistralai", "llm-integration", "european-ai", "privacy-focused", "advanced-models"],
  "prerequisites": ["011-openai-integration", "018-fireworks-integration"],
  "imports_required": [
    "pixeltable",
    "pixeltable.functions.mistralai",
    "mistralai",
    "os",
    "getpass"
  ],
  "performance_notes": {
    "typical_runtime": "30-45 seconds for setup, 2-3 seconds per query",
    "resource_requirements": "Mistral AI API key, internet connection",
    "bottlenecks": ["API key setup", "network latency to European servers"]
  },
  "key_learnings": [
    "Mistral AI provides European-based LLM services with strong privacy focus",
    "Uses dedicated mistralai SDK for optimal integration with their platform",
    "mistral-small-latest offers excellent quality-to-cost ratio",
    "Response structure follows OpenAI compatibility for easy integration",
    "European data residency and GDPR compliance built-in",
    "Advanced parameter control through model_kwargs similar to other providers",
    "Strong performance on multilingual tasks and European languages"
  ],
  "relationships": {
    "builds_on": ["basic_pixeltable_concepts", "model_kwargs_pattern"],
    "enables": ["european_compliant_ai", "multilingual_processing", "privacy_focused_workflows"],
    "see_also": ["018-fireworks-integration#mixtral_models", "011-openai-integration#basic_chat"],
    "contrasts_with": ["us_based_providers", "openai_american_focus", "anthropic_us_servers"]
  },
  "steps": [
    {
      "number": 1,
      "section_title": "Environment Setup and Dependencies",
      "intent": "Install Mistral AI SDK and configure API access for European LLM services",
      "code": "%pip install -qU pixeltable mistralai\n\nimport os\nimport getpass\n\nif 'MISTRAL_API_KEY' not in os.environ:\n    os.environ['MISTRAL_API_KEY'] = getpass.getpass('Mistral AI API Key:')",
      "imports_used": ["os", "getpass"],
      "explanation": "Mistral AI uses dedicated SDK for accessing their European-based language models",
      "actual_output": "[Installation progress and API key prompt]",
      "output_summary": "Mistral AI SDK installed and API key configured",
      "output_type": "text",
      "learns": ["mistralai_sdk_installation", "european_ai_services"],
      "reinforces": ["package_installation", "api_key_management"],
      "gotchas": ["Package name is 'mistralai' without hyphen", "API key variable is MISTRAL_API_KEY"],
      "performance": {
        "execution_time": "20-30s for installation",
        "scaling": "O(1) - one-time setup",
        "optimization": "demo"
      },
      "alternatives": {
        "description": "Use OpenAI-compatible endpoints if supported by Mistral",
        "when_to_use": "When maintaining consistent API across multiple providers"
      },
      "state_after": {
        "tables": [],
        "views": [],
        "variables": ["MISTRAL_API_KEY"],
        "models_loaded": []
      },
      "pattern_refs": ["api_key_setup", "dedicated_sdk_installation"]
    },
    {
      "number": 2,
      "section_title": "Create Demo Directory",
      "intent": "Initialize Pixeltable workspace for Mistral AI experiments",
      "code": "import pixeltable as pxt\n\n# Remove the 'mistralai_demo' directory and its contents, if it exists\npxt.drop_dir('mistralai_demo', force=True)\npxt.create_dir('mistralai_demo')",
      "imports_used": ["pixeltable"],
      "explanation": "Standard Pixeltable pattern for creating isolated workspaces",
      "actual_output": "Connected to Pixeltable database at: postgresql+psycopg://postgres:@/pixeltable?host=/Users/asiegel/.pixeltable/pgdata\nCreated directory `mistralai_demo`.\n\n<pixeltable.catalog.dir.Dir at 0x3381254c0>",
      "output_summary": "Demo directory created with database connection confirmation",
      "output_type": "text",
      "learns": [],
      "reinforces": ["directory_management", "workspace_isolation"],
      "gotchas": [],
      "performance": {
        "execution_time": "<1s",
        "scaling": "O(1)",
        "optimization": "demo"
      },
      "alternatives": {
        "description": "Use existing directory or different naming convention",
        "when_to_use": "When integrating into existing projects"
      },
      "state_after": {
        "tables": [],
        "views": [],
        "variables": [],
        "models_loaded": []
      },
      "pattern_refs": ["workspace_initialization", "directory_cleanup"]
    },
    {
      "number": 3,
      "section_title": "Mistral AI Chat Setup with Advanced Parameters",
      "intent": "Create chat table using Mistral's small model with optimized parameter configuration",
      "code": "from pixeltable.functions.mistralai import chat_completions\n\n# Create a table in Pixeltable and add a computed column that calls Mistral AI\n\nt = pxt.create_table('mistralai_demo.chat', {'input': pxt.String})\n\nmessages = [{'role': 'user', 'content': t.input}]\nt.add_computed_column(output=chat_completions(\n    messages=messages,\n    model='mistral-small-latest',\n    model_kwargs={\n        # Optional dict with parameters for the Mistral API\n        'max_tokens': 300,\n        'top_p': 0.9,\n        'temperature': 0.7\n    }\n))",
      "imports_used": ["pixeltable.functions.mistralai.chat_completions"],
      "explanation": "mistral-small-latest provides excellent balance of quality and cost for most applications",
      "actual_output": "Created table `chat`.\nAdded 0 column values with 0 errors.",
      "output_summary": "Chat table created with Mistral AI small model and parameter tuning",
      "output_type": "text",
      "learns": ["mistralai_chat_completions", "mistral_small_latest_model", "mistral_parameter_control"],
      "reinforces": ["computed_column_creation", "model_kwargs_pattern"],
      "gotchas": ["Model name includes 'latest' suffix for automatic updates", "European servers may have slightly higher latency"],
      "performance": {
        "execution_time": "1s",
        "scaling": "O(1) for setup",
        "optimization": "demo"
      },
      "alternatives": {
        "description": "Use mistral-medium or mistral-large for higher quality tasks",
        "when_to_use": "Complex reasoning or multilingual tasks requiring maximum quality"
      },
      "state_after": {
        "tables": ["mistralai_demo.chat"],
        "views": [],
        "variables": ["t"],
        "models_loaded": ["mistral-small-latest"]
      },
      "pattern_refs": ["mistralai_model_setup", "european_ai_configuration"]
    },
    {
      "number": 4,
      "section_title": "Response Parsing",
      "intent": "Extract readable text from Mistral AI's OpenAI-compatible response structure",
      "code": "# Parse the response into a new column\nt.add_computed_column(response=t.output.choices[0].message.content)",
      "imports_used": ["pixeltable.functions.mistralai"],
      "explanation": "Mistral AI maintains OpenAI response compatibility for seamless integration",
      "actual_output": "Added 0 column values with 0 errors.",
      "output_summary": "Response parsing column added successfully",
      "output_type": "text",
      "learns": [],
      "reinforces": ["response_field_extraction", "openai_compatibility"],
      "gotchas": [],
      "performance": {
        "execution_time": "<1s",
        "scaling": "O(1)",
        "optimization": "demo"
      },
      "alternatives": {
        "description": "Extract usage metrics for European compliance reporting",
        "when_to_use": "GDPR compliance or detailed usage tracking required"
      },
      "state_after": {
        "tables": ["mistralai_demo.chat"],
        "views": [],
        "variables": ["t"],
        "models_loaded": ["mistral-small-latest"]
      },
      "pattern_refs": ["openai_response_extraction"]
    },
    {
      "number": 5,
      "section_title": "Specialized Knowledge Testing",
      "intent": "Test Mistral AI's performance on specific domain knowledge with health information",
      "code": "# Start a conversation\nt.insert(input=\"What three species of fish have the highest mercury content?\")\nt.select(t.input, t.response).show()",
      "imports_used": ["pixeltable.functions.mistralai"],
      "explanation": "Health-related query tests Mistral's knowledge quality and accuracy",
      "actual_output": "Computing cells: 100%|████████████████████████████████████████████| 3/3 [00:02<00:00,  1.26 cells/s]\nInserting rows into `chat`: 1 rows [00:00, 134.12 rows/s]\nComputing cells: 100%|████████████████████████████████████████████| 3/3 [00:02<00:00,  1.26 cells/s]\nInserted 1 row with 0 errors.\n\n                                               input  \\\n0  What three species of fish have the highest me...   \n\n                                            response  \n0  The three species of fish that typically have ...  ",
      "output_summary": "Mistral AI provided accurate health information about mercury in fish species",
      "output_type": "table",
      "learns": [],
      "reinforces": ["table_insertion", "query_execution", "specialized_knowledge_testing"],
      "gotchas": [],
      "performance": {
        "execution_time": "2s for API call (1.26 cells/s)",
        "scaling": "O(n) for n queries",
        "optimization": "demo"
      },
      "alternatives": {
        "description": "Test multilingual capabilities with European language queries",
        "when_to_use": "Validating multilingual support for European markets"
      },
      "state_after": {
        "tables": ["mistralai_demo.chat"],
        "views": [],
        "variables": ["t"],
        "models_loaded": ["mistral-small-latest"]
      },
      "pattern_refs": ["basic_chat_interaction", "domain_knowledge_validation"]
    }
  ],
  "patterns": [
    {
      "name": "mistralai_model_setup",
      "description": "Configuration for Mistral AI's European-based language models",
      "confidence": "high",
      "frequency": 1,
      "first_seen": "021-mistralai-integration",
      "code_template": "from pixeltable.functions.mistralai import chat_completions\n\nt.add_computed_column(output=chat_completions(\n    messages=messages,\n    model='mistral-small-latest',\n    model_kwargs={\n        'max_tokens': 300,\n        'top_p': 0.9,\n        'temperature': 0.7\n    }\n))",
      "parameters": {
        "model": "Mistral model name (mistral-small-latest, mistral-medium, mistral-large)",
        "model_kwargs": "Parameter dictionary for generation control"
      },
      "variations": [
        {
          "name": "high_quality",
          "difference": "Use larger model for complex tasks",
          "code": "model='mistral-large-latest'"
        },
        {
          "name": "cost_optimized",
          "difference": "Use smallest model for simple tasks",
          "code": "model='mistral-tiny-latest'"
        }
      ],
      "prerequisites": ["mistralai_api_access", "sdk_installation"],
      "enables": ["european_compliant_ai", "multilingual_processing"],
      "performance_impact": "Model-dependent latency and cost, European server locations",
      "reusable": true,
      "production_ready": true
    },
    {
      "name": "european_ai_configuration",
      "description": "Setup for European data residency and GDPR compliance",
      "confidence": "high",
      "frequency": 1,
      "first_seen": "021-mistralai-integration",
      "code_template": "# Mistral AI automatically provides:\n# - European data residency\n# - GDPR compliance\n# - Privacy-focused processing\n\nfrom pixeltable.functions.mistralai import chat_completions\n\n# Data stays in Europe by default\nresult = chat_completions(messages=messages, model='mistral-small-latest')",
      "parameters": {
        "data_residency": "Automatic European data residency",
        "compliance": "Built-in GDPR compliance"
      },
      "variations": [
        {
          "name": "audit_logging",
          "difference": "Add usage logging for compliance reporting",
          "code": "# Log API usage for GDPR compliance reporting"
        }
      ],
      "prerequisites": ["mistralai_account", "european_data_requirements"],
      "enables": ["gdpr_compliance", "european_market_deployment"],
      "performance_impact": "Minimal overhead for compliance features",
      "reusable": true,
      "production_ready": true
    }
  ],
  "common_errors": [
    {
      "error_type": "Invalid Mistral AI API key",
      "frequency": "common",
      "cause": "Missing, incorrect, or expired Mistral AI API key",
      "symptoms": ["401 Unauthorized", "Authentication failed"],
      "solution": {
        "quick_fix": "Verify API key is correct and set in MISTRAL_API_KEY environment variable",
        "proper_fix": "Generate new API key from Mistral AI console if needed"
      },
      "prevention": "Test API key with simple request before integration",
      "example": "Missing or invalid key in environment variable",
      "first_seen": "021-mistralai-integration#step1"
    },
    {
      "error_type": "Model not available",
      "frequency": "occasional",
      "cause": "Using incorrect model name or model temporarily unavailable",
      "symptoms": ["Model not found", "Invalid model specified"],
      "solution": {
        "quick_fix": "Check Mistral AI documentation for available model names",
        "proper_fix": "Use standard model names like 'mistral-small-latest'"
      },
      "prevention": "Reference official Mistral AI model documentation",
      "example": "Using 'mistral-7b' instead of 'mistral-small-latest'",
      "first_seen": "021-mistralai-integration#step3"
    },
    {
      "error_type": "Rate limiting on usage tier",
      "frequency": "common",
      "cause": "Exceeding API rate limits based on subscription tier",
      "symptoms": ["Rate limit exceeded", "Too many requests"],
      "solution": {
        "quick_fix": "Add delays between requests or upgrade subscription",
        "proper_fix": "Implement proper rate limiting and request queuing"
      },
      "prevention": "Monitor request rates and implement exponential backoff",
      "example": "Rapid successive requests hitting tier-based limits",
      "first_seen": "021-mistralai-integration#step5"
    },
    {
      "error_type": "Missing mistralai package",
      "frequency": "common",
      "cause": "Mistral AI requires dedicated SDK package",
      "symptoms": ["ModuleNotFoundError: No module named 'mistralai'"],
      "solution": {
        "quick_fix": "pip install mistralai",
        "proper_fix": "Include mistralai in requirements.txt"
      },
      "prevention": "Install Mistral AI SDK for proper integration",
      "example": "Trying to use Mistral functions without mistralai dependency",
      "first_seen": "021-mistralai-integration#step1"
    }
  ],
  "test_questions": [
    {
      "question": "What are the main advantages of choosing Mistral AI over US-based providers?",
      "type": "conceptual",
      "answer": "European data residency, GDPR compliance, strong multilingual support, privacy-focused approach",
      "difficulty": "intermediate"
    },
    {
      "question": "What SDK package does Mistral AI require for integration?",
      "type": "implementation",
      "answer": "'mistralai' - a dedicated SDK for accessing Mistral's European services",
      "difficulty": "beginner"
    },
    {
      "question": "What is the recommended model for general-purpose tasks in Mistral AI?",
      "type": "implementation",
      "answer": "'mistral-small-latest' - provides excellent quality-to-cost ratio",
      "difficulty": "beginner"
    },
    {
      "question": "How does Mistral AI's response structure compare to OpenAI?",
      "type": "conceptual",
      "answer": "Identical - both use choices[0].message.content for seamless integration",
      "difficulty": "beginner"
    },
    {
      "question": "What compliance benefits does Mistral AI provide for European businesses?",
      "type": "conceptual",
      "answer": "Automatic GDPR compliance, European data residency, privacy-by-design architecture",
      "difficulty": "intermediate"
    }
  ],
  "production_tips": [
    {
      "tip": "Leverage Mistral AI for European market deployment",
      "impact": "Automatic GDPR compliance and data residency without additional configuration",
      "implementation": "Use Mistral AI for European users, other providers for global markets",
      "trade_offs": "Regional optimization vs. single provider simplicity",
      "example": "Route EU traffic to Mistral, US traffic to OpenAI based on user location"
    },
    {
      "tip": "Utilize Mistral's multilingual capabilities for European languages",
      "impact": "Better performance on French, German, Spanish, Italian compared to US providers",
      "implementation": "Test model performance on target European languages",
      "trade_offs": "Language optimization vs. English-focused models",
      "example": "Use Mistral for multilingual customer support, OpenAI for English-only tasks"
    },
    {
      "tip": "Monitor costs across different Mistral model tiers",
      "impact": "Optimize for quality vs. cost based on specific use cases",
      "implementation": "Use mistral-small for simple tasks, mistral-large for complex reasoning",
      "trade_offs": "Model switching complexity vs. cost optimization",
      "example": "FAQ responses use mistral-small, complex analysis uses mistral-large"
    },
    {
      "tip": "Implement European compliance reporting and audit trails",
      "impact": "Meet GDPR requirements for data processing transparency",
      "implementation": "Log API usage, data processing activities, and user consent",
      "trade_offs": "Additional logging overhead vs. compliance requirements",
      "example": "Track processing purpose, data retention, user consent status"
    },
    {
      "tip": "Use Mistral for privacy-sensitive applications",
      "impact": "Better privacy posture with European privacy-by-design approach",
      "implementation": "Choose Mistral for healthcare, finance, or sensitive personal data",
      "trade_offs": "Potentially higher costs vs. enhanced privacy protection",
      "example": "Medical AI applications, financial advice, personal data analysis"
    }
  ],
  "pattern_maturity": {
    "novel_patterns": 1,
    "established_patterns": 1,
    "total_patterns": 2
  },
  "cookies": "🍪 Why did the European startup choose Mistral AI? Because they wanted their AI to be comme il faut - sophisticated, privacy-conscious, and perfectly at home with both croissants and GDPR compliance! Plus, their data never has to cross the Atlantic for a vacation! 🇪🇺"
}