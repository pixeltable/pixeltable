[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pixeltable"
version = "0.2.5"
description = "Pixeltable: The Multimodal AI Data Plane"
authors = ["Marcel Kornacker <marcelk@gmail.com>"]
readme = "README.md"
exclude = [
    ".pytype",
    ".pytest_cache",
    "pixeltable/.pytest_cache",
    "pixeltable/tests/data"
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = ">=1.26"
pandas = ">=2.0,<3.0"
pillow = ">=10.0"
opencv-python-headless = "^4.7.0.68"
tqdm = "^4.64.1"
jmespath = "^1.0.1"
regex = "^2022.10.31"
cloudpickle = "^2.2.1"
psycopg2-binary = "^2.9.5"
psutil = "^5.9.5"
sqlalchemy = {extras = ["mypy"], version = "^2.0.23"}
sqlalchemy-utils = "^0.41.1"
pgvector = "^0.2.1"
av = ">=10.0.0"
beautifulsoup4 = "^4.0.0"
requests = "^2.31.0"
pyyaml = "^6.0.1"
jinja2 = "^3.1.3"
tenacity = "^8.2"
pgserver = "0.1.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# pytest-related
pytest = "^7.2.1"
pytest-xdist = {extras = ["psutil"], version = "^3.3.1"}
coverage = "^7.4"
# mypy-related
mypy = "^1.8.0"
types-pillow = ">=10.0"
types-pyyaml = "^6.0.1"
pyarrow-stubs = "^10.0.1.7"
# linting
pylint = "^3.1.0"
ruff = "^0.3.1"
# jupyter
notebook = "^7.1.0"
# mkdocs-related
mkdocs = "^1.5.3"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
mkdocs-material = "^9.5.3"
mkdocs-jupyter = "^0.24"
# other
pycocotools = "^2.0.7"
ipykernel = "^6.27.1"
nbmake = "^1.4.6"
# packages required by various optional pieces of the codebase
torch = "^2.2"
torchvision = "^0.17"
pyarrow = ">=13.0.0"
openai = "^1.0.0"
together = "^1.0.1"
fireworks-ai = "^0.13.0"
boto3 = "^1.17"
spacy = "^3.0"
en-core-web-sm = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.7.1/en_core_web_sm-3.7.1-py3-none-any.whl"}
tiktoken = ">=0.3"
sentence-transformers = "^2.0.0"
transformers = "^4.20"
datasets = ">=2.15.0"

[tool.mypy]
plugins = "sqlalchemy.ext.mypy.plugin"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pylint.main]
max-line-length = 120

[tool.pylint."messages control"]
# Disable various Pylint messages that seem pointless or annoying.
# If Pylint is bugging you about something that seems like it should be excluded,
# propose it as a new exclusion by adding it to this list as part of the PR.
# C0114: Missing module docstring (missing-module-docstring)
# C0116: Missing function or method docstring (missing-function-docstring)
# C0415: Import outside toplevel
# E1121: Too many positional arguments for method call (too-many-function-args)
# R0401: Cyclic import
# R0801: Similar lines in 2 files
# R0902: Too many instance attributes
# R0913: Too many arguments
# R0914: Too many local variables
# W0511: TODO
disable = ["C0114","C0116","C0415","E1121","R0401","R0801","R0902","R0913","R0914","W0511"]

[tool.pytest.ini_options]
addopts = "-v -m \"not remote_api\""
markers = [
    "remote_api: marks tests as calling a remote API (such as OpenAI)"
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["F", "E", "W", "C", "I", "N", "B", "A", "ICN", "PYI", "SIM", "TD002", "PL", "RUF"]
ignore = ["PLC0415", "PLR0904", "PLR0912", "PLR0913", "PLR0914", "PLR0915", "PLR2004"]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["pixeltable"]

[tool.ruff.format]
quote-style = "preserve"
