[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning>=1.3.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "pixeltable"
version = "0.0.0"
description = "AI Data Infrastructure: Declarative, Multimodal, and Incremental"
license = "Apache-2.0"
authors = ["Pixeltable, Inc. <contact@pixeltable.com>"]
readme = "README.md"
homepage = "https://pixeltable.com/"
repository = "https://github.com/pixeltable/pixeltable"
documentation = "https://docs.pixeltable.com/"
keywords = [
    "data-science", "machine-learning", "database", "ai", "computer-vision",
    "chatbot", "ml", "artificial-intelligence", "feature-engineering", "multimodal",
    "mlops", "feature-store", "vector-database", "llm", "genai"
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
exclude = [
    ".pytype",
    ".pytest_cache",
    "tests",
    "docs",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = ">=1.25,<2.0"
pandas = ">=2.0,<3.0"
pillow = ">=9.3.0"
tqdm = ">=4.64"
toml = ">=0.10"
jsonschema = ">=4.1.0"
jmespath = "^1.0.1"
more-itertools = "^10.2"
cloudpickle = "^2.2.1"
psycopg = { extras = ["binary"], version = ">=3.1.18" }
psutil = "^5.9.5"
sqlalchemy = "^2.0.23"
pgvector = "^0.2.1"
av = ">=10.0.0"
beautifulsoup4 = "^4.0.0"
lxml = ">=5.0"
requests = "^2.31.0"
pyyaml = "^6.0.1"
jinja2 = "^3.1.3"
tenacity = "^8.2"
puremagic = ">=1.20"
pymupdf = "^1.24.1"
ftfy = "^6.2.0"
pixeltable-pgserver = "==0.2.9"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# pytest-related
pytest = "^7.2.1"
pytest-xdist = { extras = ["psutil"], version = "^3.3.1" }
pytest-rerunfailures = "^14.0.0"
coverage = "^7.4"
# type checking
mypy = "^1.11.2"
boto3-stubs = "==1.35.5"
pandas-stubs = ">=2.0"
pyarrow-stubs = "^10.0.1.7"
types-beautifulsoup4 = ">=4.2"
types-jmespath = ">=1.0"
types-jsonschema = ">=4.1.0"
types-pillow = ">=10.0"
types-pyyaml = "^6.0.1"
types-requests = ">=2.31.0"
types-sqlalchemy-utils = "^1.1"
types-toml = ">=0.10"
types-tqdm = "^4.64"
# linting
pylint = "^3.1.0"
ruff = "^0.3.1"
# jupyter
notebook = "^7.1.0"
# mkdocs-related
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.23"
mkdocstrings-python = "^1.10.2"
black = ">=24.4"  # Needed for mkdocs
# other
pycocotools = "^2.0.7"
ipykernel = "^6.27.1"
nbmake = "^1.4.6"
# packages required by various optional pieces of the codebase
mistune = "^3.0.2"
torch = "^2.2"
torchaudio = "^2.2"
torchvision = "^0.17"
pyarrow = ">=13.0.0"
openai = "^1.10.0"
anthropic = ">=0.34.2"
together = "^1.3.1"
fireworks-ai = "^0.13.0"
mistralai = "^1.2.1"
replicate = "^1.0.2"
google-generativeai = "^0.8.3"
boto3 = "==1.35.5"  # Locking a specific version of boto3 dramatically improves `poetry lock` runtimes
spacy = ">=3.7"
pydantic = ">=2.7.4"  # Required minimum version to work with spacy + python 3.12
sentencepiece = ">=0.2.0"
tiktoken = ">=0.7"
sentence-transformers = "^2.0.0"
transformers = "^4.20"
timm = "^1.0.11"
datasets = ">=3.2.0"
openpyxl = ">=3.1"  # Excel (.xlsx) support
openai-whisper = ">=20240930"
label-studio-sdk = "^0.0.32"
fiftyone = "^1.0.0"
ollama = ">=0.4.0"
llama-cpp-python = ">=0.3.1"
psycopg = [  # Lock psycopg versions in dev to ensure proper behavior with all Python versions
    { extras = ["binary"], version = "==3.1.18", python = "<3.13" },
    { extras = ["binary"], version = "==3.2.3", python = ">=3.13" }
]
av = [  # Lock av versions in dev
    { version = "==11.0.0", python = "<3.13" },
    { version = "==13.1.0", python = ">=3.13" }
]

[tool.poetry.plugins."mkdocstrings.python.templates"]
extension-name = "pixeltable.tool.doc_plugins.mkdocstrings:get_templates_path"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true

[tool.poetry-dynamic-versioning.substitution]
files = ["pixeltable/__version__.py"]

[tool.isort]
line_length = 120

[tool.mypy]
allow_redefinition = true
disable_error_code = "no-any-unimported, no-any-return"
disallow_any_unimported = true
check_untyped_defs = true
follow_imports = "silent"
plugins = "pydantic.mypy, pixeltable/tool/mypy_plugin.py"
show_error_codes = true
strict_optional = false
warn_return_any = true
warn_unused_ignores = true

[tool.pylint.main]
max-line-length = 120

[tool.pylint."messages control"]
# Disable various Pylint messages that seem pointless or annoying.
# If Pylint is bugging you about something that seems like it should be excluded,
# propose it as a new exclusion by adding it to this list as part of the PR.
# C0114: Missing module docstring (missing-module-docstring)
# C0116: Missing function or method docstring (missing-function-docstring)
# C0415: Import outside toplevel
# E1121: Too many positional arguments for method call (too-many-function-args)
# R0401: Cyclic import
# R0801: Similar lines in 2 files
# R0902: Too many instance attributes
# R0913: Too many arguments
# R0914: Too many local variables
# W0511: TODO
disable = ["C0114","C0116","C0415","E1121","R0401","R0801","R0902","R0913","R0914","W0511"]

[tool.pytest.ini_options]
addopts = "-v -m \"not remote_api and not expensive\" --strict-markers"
markers = [
    "remote_api: marks tests as calling a remote API (such as OpenAI)",
    "expensive: marks tests as expensive to run"
]
filterwarnings = [
    "ignore:The `dict` method is deprecated; use `model_dump` instead.:DeprecationWarning",
    "ignore:Pydantic V1 style `@validator` validators are deprecated.:DeprecationWarning",
    "ignore:Pydantic V1 style `@root_validator` validators are deprecated.:DeprecationWarning",
    "ignore:`allow_reuse` is deprecated and will be ignored:DeprecationWarning",
    # This warning is from Whisper:
    "ignore:FP16 is not supported on CPU:UserWarning",
    # These four warnings are all from WhisperX:
    "ignore:Deprecated call to `pkg_resources:DeprecationWarning",
    "ignore:The get_cmap function was deprecated in Matplotlib 3.7:DeprecationWarning",
    "ignore:pkg_resources is deprecated as an API:",
    "ignore:torchaudio._backend.set_audio_backend:UserWarning",
    # This warning is from `lxml` (when it calls out to `beautifulsoup4`):
    "ignore:The 'strip_cdata' option of HTMLParser:DeprecationWarning",
    # This one is raised by mongoengine, which is required by fiftyone:
    "ignore:No uuidRepresentation is specified! Falling back to 'pythonLegacy' which is the default for pymongo 3.x:DeprecationWarning",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["F", "E", "W", "C", "I", "N", "B", "A", "ICN", "PYI", "SIM", "TD002", "PL", "RUF"]
ignore = ["PLC0415", "PLR0904", "PLR0912", "PLR0913", "PLR0914", "PLR0915", "PLR2004"]
preview = true

[tool.ruff.lint.isort]
known-first-party = ["pixeltable"]

[tool.ruff.format]
quote-style = "single"  # can be "single", "double", or "preserve"
